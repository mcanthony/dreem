set -e
echo ""

if [[ "$2" == "" ]]; then
  echo "Please supply a version number and release candidate number."
  echo "Input in this format: ./bin/tagrc <version> <rc>"
  echo "For example: ./bin/tagrc 0.1.0 1"
  echo ""
  exit 2
fi

if [[ "$2" != "1" ]]; then
  declare -i prevRC
  prevRC=$2-1
  echo $prevRC
  
  fromBranch=v${1}-rc.${prevRC}
else
  declare -i prevRC
  prevRC=0
  echo $prevRC
  
  fromBranch=dev
fi
  
echo "....CREATING NEW Release Candidate: v${1}-rc.${2} from branch ${fromBranch}"
echo "....Is this correct? [Y|N]"
echo ""

read answer

if [ "$answer" == "N" -o "$answer" == "n" ]; then
  echo "Ok, try again. Input in this format: ./bin/tagrc <version> <rc>"
  echo "For example: ./bin/tagrc 0.1.0 1"
fi

if [ "$answer" != "Y" -a "$answer" != "y" ]; then
  exit 2
fi

git fetch origin

if [[ "$fromBranch" == "dev" ]]; then
  git fetch --tags origin
  tags=`git tag | grep "^nightly" | xargs`
  #echo $tags
  
  if [ "$tags" != "" ]; then
    arr=(${tags/\s/ })
    
    len=${#arr[@]}
    last_pos=$((len - 1))
    
    latest_nightly=${arr[${last_pos}]}
    echo $latest_nightly
    
    fromBranch = $latest_nightly
  fi
fi

if [[ "$fromBranch" == "dev" ]]; then
  echo "CANNOT CREATE RC:: No passing build found!"
  exit 1
fi

echo "Checking out ${fromBranch}..."
git checkout $fromBranch

echo "Creating branch v${1}-rc.${2}..."
git branch v${1}-rc.${2}

git checkout v${1}-rc.${2}
git push origin v${1}-rc.${2}
